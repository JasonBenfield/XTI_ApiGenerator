<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFramework>netstandard2.0</TargetFramework>
		<PackageOutputPath>C:\XTI\Packages\Development</PackageOutputPath>
		<Timestamp>$([System.DateTime]::Now.ToString("yyyyMMddHHmmss"))</Timestamp>
		<VersionPrefix>1.0.3</VersionPrefix>
		<CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
		<!--<Version>1.0.3-dev$(Timestamp)</Version>-->
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.12.0" PrivateAssets="all" />
		<PackageReference Include="Microsoft.Build.Utilities.Core" Version="17.12.6" PrivateAssets="all" />
	</ItemGroup>

	<ItemGroup>
		<!-- These lines pack the build props/targets files to the `build` folder in the generated package.
         By convention, the .NET SDK will look for build\<Package Id>.props and build\<Package Id>.targets
         for automatic inclusion in the build. -->
		<Content Include="build\XTI_ApiGeneratorTask.props" PackagePath="build\" />
		<Content Include="build\XTI_ApiGeneratorTask.targets" PackagePath="build\" />
	</ItemGroup>

	<PropertyGroup>
		<TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>
	</PropertyGroup>

	<PropertyGroup Condition="$(PackAsComponent) != ''">
		<TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CustomBuildOutput</TargetsForTfmSpecificBuildOutput>
	</PropertyGroup>

	<Target Name="CustomBuildOutput">
		<ItemGroup>
			<BuildOutputInPackage Include="$(OutputPath)*.dll" Exclude="$(TargetPath)" />
		</ItemGroup>
	</Target>

	<Target Name="CopyProjectReferencesToPackage" DependsOnTargets="ResolveReferences">
		<ItemGroup>
			<!--The dependencies of your MSBuild task must be packaged inside the package, they cannot be expressed as normal PackageReferences-->
			<BuildOutputInPackage Include="@(ReferenceCopyLocalPaths)" TargetPath="%(ReferenceCopyLocalPaths.DestinationSubPath)" />
		</ItemGroup>
	</Target>

	<!--This target adds the generated deps.json file to our package output-->
	<Target Name="AddBuildDependencyFileToBuiltProjectOutputGroupOutput" BeforeTargets="BuiltProjectOutputGroup" Condition=" '$(GenerateDependencyFile)' == 'true'">

		<ItemGroup>
			<BuiltProjectOutputGroupOutput Include="$(ProjectDepsFilePath)" TargetPath="$(ProjectDepsFileName)" FinalOutputPath="$(ProjectDepsFilePath)" />
		</ItemGroup>
	</Target>
</Project>
